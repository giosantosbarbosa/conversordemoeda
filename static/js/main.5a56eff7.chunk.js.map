{"version":3,"sources":["assets/images/logo.png","assets/components/Navbar/Navbar.jsx","assets/components/Conversor/Conversor.jsx","App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","React","Component","render","createElement","className","src","logo","alt","href","Conversor","valor","setValor","useState","result","setResult","loading","setLoading","useEffect","isNaN","convertCurrency","async","amountToConvert","amount","replace","response","fetch","concat","data","json","toFixed","alert","error","console","formatCurrency","value","currency","Intl","NumberFormat","style","format","type","name","onChange","e","target","invalidChars","test","placeholder","App","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uOCIjC,MAAMC,UAAeC,IAAMC,UAC9BC,SACI,OACIF,IAAAG,cAAA,cACAH,IAAAG,cAAA,WACIH,IAAAG,cAAA,OAAKC,UAAU,aACXJ,IAAAG,cAAA,OAAKE,IAAOC,IAAQC,IAAI,UAG5BP,IAAAG,cAAA,OAAKC,UAAU,YACXJ,IAAAG,cAAA,UACIH,IAAAG,cAAA,UAAIH,IAAAG,cAAA,KAAGK,KAAK,2BAA0B,SACtCR,IAAAG,cAAA,UAAIH,IAAAG,cAAA,KAAGK,KAAK,2BAA0B,aACtCR,IAAAG,cAAA,UAAIH,IAAAG,cAAA,KAAGK,KAAK,2BAA0B,cACtCR,IAAAG,cAAA,UAAIH,IAAAG,cAAA,KAAGK,KAAK,2BAA0B,UACtCR,IAAAG,cAAA,UAAIH,IAAAG,cAAA,KAAGK,KAAK,4BAA2B,uBCwEhDC,MAxFGA,KAChB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAQC,GAAaF,mBAAS,OAC9BG,EAASC,GAAcJ,oBAAS,GAKvCK,oBAAU,KACJP,IAAUQ,MAAMR,GAClBS,EAAgBT,GAEhBI,EAAU,OAEX,CAACJ,IAEJ,MAAMS,EAAkBC,UACtBJ,GAAW,GACX,IACE,MAAMK,EAAkBC,EAAOC,QAAQ,IAAK,KACtCC,QAAiBC,MAAK,0FAAAC,OAfZ,MAgBuF,QAAAA,OAftF,MAeyG,YAAAA,OAAWL,IAE/HM,QAAaH,EAASI,OACxBD,GAAQA,EAAKd,OACfC,EAAUa,EAAKd,OAAOgB,QAAQ,IAE9BC,MAAM,gCAER,MAAOC,GACPC,QAAQD,MAAM,wBAAsBA,GACrC,QACCf,GAAW,KAgBTiB,EAAiBA,CAACC,EAAOC,IACtB,IAAIC,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPH,aACCI,OAAOL,GAGZ,OACElC,IAAAG,cAAA,OAAKC,UAAU,aACbJ,IAAAG,cAAA,UAAI,uBACJH,IAAAG,cAAA,OAAKC,UAAU,kBACbJ,IAAAG,cAAA,OAAKC,UAAU,SACbJ,IAAAG,cAAA,aAAO,YAvDK,MAwDY,IACtBH,IAAAG,cAAA,SACEqC,KAAK,OACLC,KAAK,QACLP,MAAOxB,EACPgC,SA9BeC,IACzB,IAAIT,EAAQS,EAAEC,OAAOV,MAGrB,MAAMW,EAAe,WACjBA,EAAaC,KAAKZ,KACpBJ,MAAM,qDACNI,EAAQA,EAAMX,QAAQsB,EAAc,KAEtClC,EAASuB,IAsBCa,YAAY,sBAKnBhC,EACCf,IAAAG,cAAA,SAAG,kBAEHU,GACEb,IAAAG,cAAA,WACEH,IAAAG,cAAA,UAAI,cACJH,IAAAG,cAAA,SACG8B,EAAevB,EAAO,OAAO,MAAIuB,EAAepB,EAAQ,WC9DxDmC,MAdf,cAAkBhD,IAAMC,UACtBC,SACA,OAEEF,IAAAG,cAAA,WACIH,IAAAG,cAACJ,EAAM,MACPC,IAAAG,cAACM,EAAS,SCRLwC,IAASC,WAAWC,SAASC,eAAe,SACpDlD,OACHF,IAAAG,cAACH,IAAMqD,WAAU,KACfrD,IAAAG,cAAC6C,EAAG","file":"static/js/main.5a56eff7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.de956a32.png\";","import React from \"react\";\r\nimport logo from \"../../images/logo.png\";\r\nimport \"./Navbar.css\";\r\n\r\nexport class Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <header> \r\n            <nav>\r\n                <div className=\"nav-brand\"> \r\n                    <img src= { logo }  alt=\"logo\" />\r\n                </div>\r\n  \r\n                <div className=\"nav-menu\">\r\n                    <ul>\r\n                        <li><a href=\"https://www.google.com/\">Home</a></li>\r\n                        <li><a href=\"https://www.google.com/\">Services</a></li>\r\n                        <li><a href=\"https://www.google.com/\">Portfolio</a></li>\r\n                        <li><a href=\"https://www.google.com/\">About</a></li>\r\n                        <li><a href=\"https://www.google.com//\">Contact</a></li>\r\n                    </ul>\r\n                </div>\r\n  \r\n            </nav> \r\n        </header>\r\n        );\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './conversor.css';\r\n\r\nconst Conversor = () => {\r\n  const [valor, setValor] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const moedaOrigem = 'BRL'; // Moeda de origem fixa\r\n  const moedaDestino = 'USD'; // Moeda de destino fixa\r\n\r\n  useEffect(() => {\r\n    if (valor && !isNaN(valor)) {\r\n      convertCurrency(valor);\r\n    } else {\r\n      setResult(null); // Limpa o resultado se o valor for inválido\r\n    }\r\n  }, [valor]);\r\n\r\n  const convertCurrency = async (amount) => {\r\n    setLoading(true);\r\n    try {\r\n      const amountToConvert = amount.replace(',', '.');\r\n      const response = await fetch(\r\n        `https://api.exchangerate.host/convert?access_key=bc2950e9a026aa37b4f308eefe5b8640&from=${moedaOrigem}&to=${moedaDestino}&amount=${amountToConvert}`\r\n      );\r\n      const data = await response.json();\r\n      if (data && data.result) {\r\n        setResult(data.result.toFixed(2));\r\n      } else {\r\n        alert('Erro ao buscar conversão.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro na conversão:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    let value = e.target.value;\r\n\r\n\r\n    const invalidChars = /[^0-9,]/g;\r\n    if (invalidChars.test(value)) {\r\n      alert('Apenas números e vírgula são permitidos.');\r\n      value = value.replace(invalidChars, '');\r\n    }\r\n    setValor(value);\r\n  };\r\n\r\n  const formatCurrency = (value, currency) => {\r\n    return new Intl.NumberFormat('pt-BR', {\r\n      style: 'currency',\r\n      currency,\r\n    }).format(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"conversor\">\r\n      <h1>Conversor de Moedas</h1>\r\n      <div className=\"conversor-data\">\r\n        <div className=\"valor\">\r\n          <label>\r\n            Valor em {moedaOrigem}:\r\n            <input\r\n              type=\"text\" \r\n              name=\"valor\"\r\n              value={valor}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Digite o valor\"\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n      {loading ? (\r\n        <p>Convertendo...</p>\r\n      ) : (\r\n        result && (\r\n          <div>\r\n            <h2>Resultado:</h2>\r\n            <p>\r\n              {formatCurrency(valor, 'BRL')} = {formatCurrency(result, 'USD')}\r\n            </p>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversor;","import React from 'react';\nimport './assets/styles/App.css';\nimport { Navbar } from './assets/components/Navbar/Navbar';\nimport Conversor from './assets/components/Conversor/Conversor';\n\n\nclass App extends React.Component {\n  render () {    \n  return (\n    \n    <div>\n        <Navbar />\n        <Conversor />\n    </div>\n\n  );\n};\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}